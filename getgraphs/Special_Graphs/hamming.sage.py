

# This file was *autogenerated* from the file hamming.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_3 = Integer(3)
from itertools import product

def HammingGraph(d, q):
    # vertices = all d-tuples over {0,...,q-1}
    vertices = list(product(range(q), repeat=d))

    # create empty graph
    G = Graph(multiedges=False, loops=False)
    G.add_vertices(vertices)

    # add edges: differ in exactly one coordinate
    for i, u in enumerate(vertices):
        for v in vertices[i+_sage_const_1 :]:
            diff = sum(_sage_const_1  for j in range(d) if u[j] != v[j])
            if diff == _sage_const_1 :
                G.add_edge(u, v)

    return G

# Example: H(3,3)
# Example: H(3,3)
G = HammingGraph(_sage_const_3 , _sage_const_3 )

G.plot()


#print("Graph saved as HammingGraph_3_3.png")


