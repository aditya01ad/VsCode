

# This file was *autogenerated* from the file draw_n_e_graphs.sage
from sage.all_cmdline import *   # import sage library

_sage_const_7 = Integer(7); _sage_const_6 = Integer(6)
import os

n = _sage_const_7       # number of vertices
e = _sage_const_6       # number of edges
folder = f"graphs_{n}_{e}edges"

# Create folder if it doesnâ€™t exist
os.makedirs(folder, exist_ok=True)

# Generate all non-isomorphic graphs with n vertices
Gs = list(graphs(n))

# Filter by number of edges
Gs_filtered = [G for G in Gs if G.size() == e]

print(f"Total graphs with {n} vertices and {e} edges: {len(Gs_filtered)}")

for i, G in enumerate(Gs_filtered):
    # --- Save PNG image ---
    P = G.plot()
    img_file = os.path.join(folder, f"graph_{n}_{e}edges_{i}.png")
    P.save(img_file)

    # --- Save detailed spectral info ---
    txt_file = os.path.join(folder, f"graph_{n}_{e}edges_{i}.txt")
    with open(txt_file, "w") as f:
        f.write(f"Graph {i} with {n} vertices and {e} edges\n")
        f.write(f"Edges: {G.edges()}\n\n")

        f.write("Adjacency Matrix:\n")
        f.write(str(G.adjacency_matrix()) + "\n\n")

        f.write("Degree sequence:\n")
        f.write(str(G.degree_sequence()) + "\n\n")

        f.write("Adjacency Spectrum:\n")
        f.write(str(G.spectrum()) + "\n\n")

        f.write("Laplacian Spectrum:\n")
        f.write(str(G.spectrum(laplacian=True)) + "\n\n")

        #f.write("Signless Laplacian Spectrum:\n")
        #f.write(str(G.spectrum(signless=True)) + "\n")

    print(f"Saved {img_file} and {txt_file}")



"""import os, csv

n = 5      # number of vertices
e = 4      # number of edges
folder = f"graphs_{n}_{e}edges"

# Create folder if not exists
os.makedirs(folder, exist_ok=True)

# Generate all non-isomorphic graphs on n vertices
Gs = list(graphs(n))

# Filter by edge count
Gs_filtered = [G for G in Gs if G.size() == e]
print(f"Total graphs with {n} vertices and {e} edges: {len(Gs_filtered)}")

# Prepare CSV file
csvfile = os.path.join(folder, f"graphs_{n}_{e}edges_data.csv")
with open(csvfile, "w", newline="") as f:
    writer = csv.writer(f)
    writer.writerow(["Index", "Vertices", "Edges", "AdjacencyMatrix", "Spectrum"])
    
    for i, G in enumerate(Gs_filtered):
        # Save image
        P = G.plot()
        filename = os.path.join(folder, f"graph_{n}_{e}edges_{i}.png")
        P.save(filename)
        
        # Adjacency matrix (as list of lists)
        A = G.adjacency_matrix()
        A_list = [list(row) for row in A]
        
        # Spectrum (adjacency eigenvalues)
        spectrum = G.spectrum()
        
        # Write to CSV
        writer.writerow([i, n, e, A_list, spectrum])
        
        print(f"Saved {filename}, spectrum = {spectrum}")
        """

