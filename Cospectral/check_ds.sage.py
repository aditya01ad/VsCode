

# This file was *autogenerated* from the file check_ds.sage
from sage.all_cmdline import *   # import sage library

# SageMath code to test if a graph is DS (Determined by Spectrum)

def is_DS(G, verbose=True):
    """
    Check if graph G is determined by its adjacency spectrum.
    Returns True if DS, False otherwise.
    """
    print("Starting.....!")
    n = G.order()
    spectrum = sorted(G.spectrum())
    
    cospectral_mates = []
    
    # loop over all graphs of same order
    for H in graphs(n):
        if sorted(H.spectrum()) == spectrum:
            print(H)
            if not G.is_isomorphic(H):
                cospectral_mates.append(H)
    
        if cospectral_mates:
            if verbose:
                print(f"Graph on {n} vertices is NOT DS.")
                print(f"Found {len(cospectral_mates)} non-isomorphic cospectral mates.")
            return False
        else:
            if verbose:
                print(f"Graph on {n} vertices IS DS.")
                G.show()
            return True

G = graphs.CycleGraph(8)
v = G.add_vertex(8)  # new vertex
#G.add_verices()
G.add_edges([(8,1), (8,2), (8,3), (8,4)])
print(G.vertices())

# Check DS status

is_DS(G)